// Arrays
// - sequence:  is an ordered array
// - vector:    typically a one-dimensional array of values that are all of the same type, such as integers, floats, or booleans.
// - matrix:    two-dimensional array of values, where each element is identified by a pair of indices.
// - tensor:    multi-dimensional array of values, where each element is identified by a set of indices that correspond to the dimension of the tensor.
//              The number of dimensions can vary, depending on the problem being solved, and the size of each dimension can also vary.
// - dataframe: A column named tensor

Array: Type {
    self: Type,
    value: // some sort of memory assignment
    size: Int,
    capacity: Int,
    dynamic: Boolean,
    allocator: memory.Allocator,
}

ArrayError: Error {
    value: {
        OutOfMemory,
        OutOfBounds,
    },
    message: String
}

append: Function {
    args: {
        Array: Array,
        value: { Array.data.type },
    },
    returns: Result {
        self: Void,
        error: ArrayError,
    },
    body: {
        if(Array.size == Array.capacity) {
            // grow the Array
        }
        Array.data[Array.size] = value
        Array.size = Array.size + 1
    }
}

// broadcasting
multiply: Function {
    self: Array,
    args: {
        value: { Array.data.type },
    },
    returns: Result {
        self: Void,
        error: ArrayError,
    },
    body: {
        for {
            i: Int(0),
            i < Array.size,
            i = i + 1,
            {
                Array.data[i] = Array.data[i] * value
            }
        }
    }
}