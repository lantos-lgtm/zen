std: @std
build: std.build
io: std.io

addPackages: build.Packages({
    // register all paths in local directory
    local_paths: io.path.files(io.cwd()),
    // register all packages in local directory
    local_packages_path: local_paths.filter(cond: {
        return(value.extention == "zen")
    })

    local_packages: Array<build.Package>,
    // create all packages in local directory
    local_packages_loop: loop(packages_path) {
        packages.add(
            build.Package(
                name: local_packages_loop.value.name,
                path: local_packages_loop.value.path,
            )
        )
    }

    // register all packages in local directory
    build.Packages(
        packages: local_packages,
    )

    // target platform options
    target: self.Target.standard_target_options()
    // relase, debug ...
    mode: self.Mode.standard_mode_options()
    // 
    exe: self.Exe.standard_exe_options()

    runCmd: exe.run()
    if (self.args){
        runCmd.add_args(self.args)
    }

})